name : coverage badge
on: push
jobs:
    coverage_badge:
        runs-on: ubuntu-latest
        steps:
          - name: Check out repository
            uses: actions/checkout@v3
            
          - uses: actions/setup-python@v4
            with:
              python-version: '3.11'
              
          - name: Install and configure Poetry
            uses: snok/install-poetry@v1
            with:
                version: 1.5.1
                virtualenvs-create: true
                virtualenvs-in-project: true
                virtualenvs-path: ~/my-custom-path
                installer-parallel: true   
                
          - name: Load cached venv
            id: cached-poetry-dependencies
            uses: actions/cache@v3
            with:
              path: .venv
              key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
              
          - name: Install dependencies
            run: |
        
            
          - name: Install project
            run: poetry install --no-interaction  
            
          - name: Run coverage
            run: |
              poetry run coverage run -m pytest
              poetry run coverage report -m
    
          - name: Coverage Badge
            uses: tj-actions/coverage-badge-py@v2
    
          - name: Verify Changed files
            uses: tj-actions/verify-changed-files@v16
            id: verify-changed-files
            with:
              files: coverage.svg
    
          - name: Commit files
            if: steps.verify-changed-files.outputs.files_changed == 'true'
            run: |
              git config --local user.email "github-actions[bot]@users.noreply.github.com"
              git config --local user.name "github-actions[bot]"
              git add coverage.svg
              git commit -m "Updated coverage.svg"
    
          - name: Push changes
            if: steps.verify-changed-files.outputs.files_changed == 'true'
            uses: ad-m/github-push-action@master
            with:
              github_token: ${{ secrets.github_token }}
              branch: ${{ github.ref }}
